{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = differenceInCalendarDays;\nvar _index = _interopRequireDefault(require(\"../_lib/getTimezoneOffsetInMilliseconds/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../startOfDay/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nfunction differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  (0, _index3.default)(2, arguments);\n  var startOfDayLeft = (0, _index2.default)(dirtyDateLeft);\n  var startOfDayRight = (0, _index2.default)(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - (0, _index.default)(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - (0, _index.default)(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","differenceInCalendarDays","_index","_interopRequireDefault","require","_index2","_index3","obj","__esModule","MILLISECONDS_IN_DAY","dirtyDateLeft","dirtyDateRight","arguments","startOfDayLeft","startOfDayRight","timestampLeft","getTime","timestampRight","Math","round","module"],"sources":["C:/Users/Cotan/PROJET REACT/mern/frontend/node_modules/date-fns/differenceInCalendarDays/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = differenceInCalendarDays;\n\nvar _index = _interopRequireDefault(require(\"../_lib/getTimezoneOffsetInMilliseconds/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../startOfDay/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nfunction differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  (0, _index3.default)(2, arguments);\n  var startOfDayLeft = (0, _index2.default)(dirtyDateLeft);\n  var startOfDayRight = (0, _index2.default)(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - (0, _index.default)(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - (0, _index.default)(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}\n\nmodule.exports = exports.default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,wBAAwB;AAE1C,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,kDAAkD,CAAC,CAAC;AAEhG,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,wBAAwB,CAAC,CAAC;AAEvE,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAE9E,SAASD,sBAAsB,CAACI,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEP,OAAO,EAAEO;EAAI,CAAC;AAAE;AAE9F,IAAIE,mBAAmB,GAAG,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASR,wBAAwB,CAACS,aAAa,EAAEC,cAAc,EAAE;EAC/D,CAAC,CAAC,EAAEL,OAAO,CAACN,OAAO,EAAE,CAAC,EAAEY,SAAS,CAAC;EAClC,IAAIC,cAAc,GAAG,CAAC,CAAC,EAAER,OAAO,CAACL,OAAO,EAAEU,aAAa,CAAC;EACxD,IAAII,eAAe,GAAG,CAAC,CAAC,EAAET,OAAO,CAACL,OAAO,EAAEW,cAAc,CAAC;EAC1D,IAAII,aAAa,GAAGF,cAAc,CAACG,OAAO,EAAE,GAAG,CAAC,CAAC,EAAEd,MAAM,CAACF,OAAO,EAAEa,cAAc,CAAC;EAClF,IAAII,cAAc,GAAGH,eAAe,CAACE,OAAO,EAAE,GAAG,CAAC,CAAC,EAAEd,MAAM,CAACF,OAAO,EAAEc,eAAe,CAAC,CAAC,CAAC;EACvF;EACA;;EAEA,OAAOI,IAAI,CAACC,KAAK,CAAC,CAACJ,aAAa,GAAGE,cAAc,IAAIR,mBAAmB,CAAC;AAC3E;AAEAW,MAAM,CAACtB,OAAO,GAAGA,OAAO,CAACE,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}